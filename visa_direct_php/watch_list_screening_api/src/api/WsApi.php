<?php
/**
 * WsApi
 * PHP version 5
 *
 * @category Class
 * @package  aml_100
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Watch List Screening API
 *
 * The Watch List Screening API provides an OFAC score value used for evaluation on how closely an individual's name, city, and country input fields match against entries on the OFAC SDN lists.  The Watch List Screening API also provides an OFAC status value which represents how VisaNet would process the individual's information if used in a cross-border OCT transaction.
 *
 * OpenAPI spec version: v1
 * Contact: 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace aml_100\api;

use \aml_100\ApiClient;
use \aml_100\ApiException;
use \aml_100\Configuration;
use \aml_100\ObjectSerializer;

/**
 * WsApi Class Doc Comment
 *
 * @category Class
 * @package  aml_100
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WsApi
{
    /**
     * API Client
     *
     * @var \aml_100\ApiClient instance of the ApiClient
     */
    protected $apiClient;

    /**
     * Constructor
     *
     * @param \aml_100\ApiClient|null $apiClient The api client to use
     */
    public function __construct(\aml_100\ApiClient $apiClient = null)
    {
        if ($apiClient === null) {
            $apiClient = new ApiClient();
        }

        $this->apiClient = $apiClient;
    }

    /**
     * Get API client
     *
     * @return \aml_100\ApiClient get the API client
     */
    public function getApiClient()
    {
        return $this->apiClient;
    }

    /**
     * Set the API client
     *
     * @param \aml_100\ApiClient $apiClient set the API client
     *
     * @return WsApi
     */
    public function setApiClient(\aml_100\ApiClient $apiClient)
    {
        $this->apiClient = $apiClient;
        return $this;
    }

    /**
     * Operation postwatchlistinquiry
     *
     * 
     *
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload Note: A unique value generated by the app that is used to tie together a WLM score request and WLM score response service calls. (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload2 The name of the person who is to receive a WLM score. (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload3  (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload4 Note: This field is required if acquirerCountryCode field is provided.&lt;/br&gt;The Bank Identification Number (BIN) under which your Fund Transfer is registered. This must match the information provided during enrollment. (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload5 This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.&lt;/br&gt;Use a 3-digit numeric country code for the country where the Fund Transfer solution is registered. This must match the information provided during program enrollment. (required)
     * @throws \aml_100\ApiException on non-2xx response
     * @return \aml_100\model\WatchlistinquirypostResponse
     */
    public function postwatchlistinquiry($watchlistinquirypost_payload, $watchlistinquirypost_payload2, $watchlistinquirypost_payload3, $watchlistinquirypost_payload4, $watchlistinquirypost_payload5)
    {
        list($response) = $this->postwatchlistinquiryWithHttpInfo($watchlistinquirypost_payload, $watchlistinquirypost_payload2, $watchlistinquirypost_payload3, $watchlistinquirypost_payload4, $watchlistinquirypost_payload5);
        return $response;
    }

    /**
     * Operation postwatchlistinquiryWithHttpInfo
     *
     * 
     *
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload Note: A unique value generated by the app that is used to tie together a WLM score request and WLM score response service calls. (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload2 The name of the person who is to receive a WLM score. (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload3  (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload4 Note: This field is required if acquirerCountryCode field is provided.&lt;/br&gt;The Bank Identification Number (BIN) under which your Fund Transfer is registered. This must match the information provided during enrollment. (required)
     * @param \aml_100\model\WatchlistinquirypostPayload $watchlistinquirypost_payload5 This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.&lt;/br&gt;Use a 3-digit numeric country code for the country where the Fund Transfer solution is registered. This must match the information provided during program enrollment. (required)
     * @throws \aml_100\ApiException on non-2xx response
     * @return array of \aml_100\model\WatchlistinquirypostResponse, HTTP status code, HTTP response headers (array of strings)
     */
    public function postwatchlistinquiryWithHttpInfo($watchlistinquirypost_payload, $watchlistinquirypost_payload2, $watchlistinquirypost_payload3, $watchlistinquirypost_payload4, $watchlistinquirypost_payload5)
    {
        // verify the required parameter 'watchlistinquirypost_payload' is set
        if ($watchlistinquirypost_payload === null) {
            throw new \InvalidArgumentException('Missing the required parameter $watchlistinquirypost_payload when calling postwatchlistinquiry');
        }
        // verify the required parameter 'watchlistinquirypost_payload2' is set
        if ($watchlistinquirypost_payload2 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $watchlistinquirypost_payload2 when calling postwatchlistinquiry');
        }
        // verify the required parameter 'watchlistinquirypost_payload3' is set
        if ($watchlistinquirypost_payload3 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $watchlistinquirypost_payload3 when calling postwatchlistinquiry');
        }
        // verify the required parameter 'watchlistinquirypost_payload4' is set
        if ($watchlistinquirypost_payload4 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $watchlistinquirypost_payload4 when calling postwatchlistinquiry');
        }
        // verify the required parameter 'watchlistinquirypost_payload5' is set
        if ($watchlistinquirypost_payload5 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $watchlistinquirypost_payload5 when calling postwatchlistinquiry');
        }
        // parse inputs
        $path = "/visadirect/watchlistscreening/v1/watchlistinquiry";
        $resourcePath = "watchlistinquiry";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType(['application/json']);

        // default format to json
        $path = str_replace("{format}", "json", $path);
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($watchlistinquirypost_payload)) {
            $_tempBody = $watchlistinquirypost_payload;
        }
// body params
        $_tempBody = null;
        if (isset($watchlistinquirypost_payload2)) {
            $_tempBody = $watchlistinquirypost_payload2;
        }
// body params
        $_tempBody = null;
        if (isset($watchlistinquirypost_payload3)) {
            $_tempBody = $watchlistinquirypost_payload3;
        }
// body params
        $_tempBody = null;
        if (isset($watchlistinquirypost_payload4)) {
            $_tempBody = $watchlistinquirypost_payload4;
        }
// body params
        $_tempBody = null;
        if (isset($watchlistinquirypost_payload5)) {
            $_tempBody = $watchlistinquirypost_payload5;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic ' . base64_encode($this->apiClient->getConfig()->getUsername() . ":" . $this->apiClient->getConfig()->getPassword());
        }

        if (sizeof($queryParams) !== 0){
            ksort($queryParams);
        }

        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $path,
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                '\aml_100\model\WatchlistinquirypostResponse',
                '/visadirect/watchlistscreening/v1/watchlistinquiry'
            );

            return [$this->apiClient->getSerializer()->deserialize($response, '\aml_100\model\WatchlistinquirypostResponse', $httpHeader), $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\aml_100\model\WatchlistinquirypostResponse', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }
}
/**
* --------------------------------------------------------------------------------
*
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
* --------------------------------------------------------------------------------
*/